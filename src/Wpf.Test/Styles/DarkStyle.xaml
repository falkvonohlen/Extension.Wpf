<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Overrides native WPF controls to support a bsic theming, especially having a Dark Mode   -->
    
    <!--                             -->
    <!-- Scrolling                   -->
    <!--                             -->
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
                Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Margin="1"
                            CornerRadius="2"
                            Background="{DynamicResource BackgroundA}"
                            BorderBrush="{DynamicResource BackgroundA}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{DynamicResource BackgroundA}"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource BackgroundA}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource BackgroundA}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
                Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Width="8"
                            Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHor"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Height="8"
                            Margin="0,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="Transparent" />
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0,1,0"
                           Background="{DynamicResource BackgroundC}"
                           BorderBrush="{DynamicResource BackgroundC}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="0"
                    Background="Transparent" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHor}"
                           Margin="0,1,0,1"
                           Background="{DynamicResource BackgroundC}"
                           BorderBrush="{DynamicResource BackgroundC}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Height"
                        Value="18" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="18" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollViewer_Dark"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"
                                                Grid.Row="0"
                                                Margin="{TemplateBinding Margin}"
                                                Content="{TemplateBinding ContentControl.Content}"
                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--                             -->
    <!-- MENU                        -->
    <!--                             -->

    <Style x:Key="MenuStyle_Dark"
           TargetType="{x:Type Menu}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundA}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--                             -->
    <!-- CONTEXT MENU                -->
    <!--                             -->

    <Style x:Key="ContextMenuStyle_Dark"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundA}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--                             -->
    <!-- MENU ITEM                   -->
    <!--                             -->

    <!-- ControlTemplate for all Main/Primary Menu Items-->
    <ControlTemplate x:Key="MenuItemControlTemplate_Dark_Main"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="templateRoot"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{DynamicResource BackgroundA}"
                SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">

                <ContentPresenter x:Name="Icon"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Center"
                                  Height="16"
                                  Margin="3"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center"
                                  Width="16" />

                <Path x:Name="GlyphPanel"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      Fill="{StaticResource ForegroundA}"
                      FlowDirection="LeftToRight"
                      Margin="3"
                      Visibility="Collapsed"
                      VerticalAlignment="Center" />

                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  Content="{TemplateBinding Header}"
                                  Grid.Column="1"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       Placement="Bottom">
                    <Border x:Name="SubMenuBorder"
                            BorderBrush="{DynamicResource BackgroundB}"
                            BorderThickness="0"
                            Background="{DynamicResource BackgroundB}"
                            Padding="2">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Canvas HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                <Rectangle x:Name="OpaqueRect"
                                           Fill="{DynamicResource BackgroundB}"
                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                            </Canvas>
                            <Rectangle Fill="{DynamicResource BackgroundB}"
                                       HorizontalAlignment="Left"
                                       Margin="29,2,0,2"
                                       Width="1" />
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                        </Grid>
                    </Border>
                </Popup>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="True">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{DynamicResource HighlightB_T}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{DynamicResource HighlightB}" />
                <Setter Property="BorderThickness"
                        TargetName="templateRoot"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundA}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="TextElement.Foreground"
                        TargetName="templateRoot"
                        Value="{DynamicResource ForegroundB}" />
                <Setter Property="Fill"
                        TargetName="GlyphPanel"
                        Value="#FF707070" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ControlTemplate for all Sub/Secondary Menu Items-->
    <ControlTemplate x:Key="MenuItemControlTemplate_Dark_Sub"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="templateRoot"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{DynamicResource BackgroundB}"
                SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup"
                                      Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Content="{TemplateBinding Icon}"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Center"
                                  Height="16"
                                  Margin="3"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="Center"
                                  Width="16" />

                <Path x:Name="GlyphPanel"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      Fill="{StaticResource ForegroundA}"
                      FlowDirection="LeftToRight"
                      Margin="3"
                      Visibility="Collapsed"
                      VerticalAlignment="Center" />

                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  Content="{TemplateBinding Header}"
                                  Grid.Column="1"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                <TextBlock Grid.Column="2"
                           Margin="{TemplateBinding Padding}"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}"
                           VerticalAlignment="Center" />
                <Grid Grid.Column="3"
                      x:Name="ArrowPanel"
                      VerticalAlignment="Center">
                    <Path x:Name="RightArrow"
                          Grid.Column="3"
                          Data="M0,0L4,3.5 0,7z"
                          Fill="{DynamicResource ForegroundB}"
                          HorizontalAlignment="Left"
                          Margin="10,0,0,0"
                          VerticalAlignment="Center" />
                </Grid>

                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       Placement="Right">
                    <Border x:Name="SubMenuBorder"
                            BorderBrush="{DynamicResource ForegroundB}"
                            BorderThickness="0"
                            Background="{DynamicResource BackgroundB}"
                            Padding="0">
                        <!--<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">-->
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      VerticalScrollBarVisibility="Auto"
                                      Style="{StaticResource ScrollViewer_Dark}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="OpaqueRect"
                                               Fill="{DynamicResource BackgroundA}"
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                </Canvas>
                                <Rectangle Fill="{DynamicResource BackgroundB}"
                                           HorizontalAlignment="Left"
                                           Margin="29,2,0,2"
                                           Width="1" />
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="True">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Visibility"
                        Value="Collapsed"
                        TargetName="ArrowPanel" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="GlyphPanel"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="templateRoot"
                        Value="{DynamicResource HighlightB_T}" />
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{DynamicResource HighlightB}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundA}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundA}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="TextElement.Foreground"
                        TargetName="templateRoot"
                        Value="{DynamicResource ForegroundB}" />
                <Setter Property="Fill"
                        TargetName="GlyphPanel"
                        Value="#FF707070" />
                <Setter Property="Fill"
                        TargetName="RightArrow"
                        Value="#FF707070" />
            </Trigger>
            <Trigger Property="CanContentScroll"
                     SourceName="SubMenuScrollViewer"
                     Value="False">
                <Setter Property="Canvas.Top"
                        TargetName="OpaqueRect"
                        Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="OpaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  Style -->
    <Style x:Key="MenuItemStyle_Dark"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />

        <Setter Property="Template"
                Value="{StaticResource MenuItemControlTemplate_Dark_Main}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{StaticResource MenuItemControlTemplate_Dark_Main}" />
                <Setter Property="Padding"
                        Value="20,3" />
                <Setter Property="Padding"
                        Value="20,3" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{StaticResource MenuItemControlTemplate_Dark_Main}" />
                <Setter Property="Padding"
                        Value="30,0" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{StaticResource MenuItemControlTemplate_Dark_Sub}" />
                <Setter Property="Padding"
                        Value="10,5" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Template"
                        Value="{StaticResource MenuItemControlTemplate_Dark_Sub}" />
                <Setter Property="Padding"
                        Value="10,5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--                             -->
    <!-- CONTEXT MENU                -->
    <!--                             -->

    <Style  x:Key="ContextMenu_Dark" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{StaticResource MenuPopupBrush}"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                            <!-- Set this brush to transparent -->
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Padding"
                                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                                    Property="CornerRadius"
                                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--                             -->
    <!-- BUTTON                      -->
    <!--                             -->
    <Style  x:Key="Button_Dark"
            TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundB}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />

        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1.2"
                            BorderBrush="#222">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundB}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB_T}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource HighlightB}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>
    <!--                             -->
    <!-- Window BUTTON               -->
    <!--                             -->
    <Style  x:Key="Button_Window_Dark"
            TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />

        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundA}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB_T}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource HighlightB}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>
    <!--                             -->
    <!-- Toogle Button MENU          -->
    <!--                             -->
    <Style  x:Key="ToggleButton_Dark"
            TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundB}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1.2"
                            BorderBrush="#222">
                        <Grid>
                            <ContentPresenter  x:Name="MyContentPresenter"
                                               Content="{TemplateBinding Content}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundB}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightC_T}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundA}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!--                             -->
    <!-- TAB ITEM                    -->
    <!--                             -->
    <Style  x:Key="TabItem_Dark"
            TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1,1,1,0"
                            BorderBrush="Black"
                            Margin="0,0,0,0"
                            CornerRadius="2,2,0,0"
                            Padding="5,0,5,0">
                        <ContentPresenter ContentSource="Header"
                                          Margin="5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource HighlightB}" />
                        </Trigger>

                        <Trigger Property="IsSelected"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{DynamicResource BackgroundA}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ForegroundA}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--                             -->
    <!-- TAB Control                 -->
    <!--                             -->
    <Style  x:Key="TabControl_Dark"
            TargetType="{x:Type TabControl }">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundB}" />

    </Style>

    <!--                             -->
    <!-- Label                       -->
    <!--                             -->
    <Style x:Key="Label_Dark"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>
    <!--                             -->
    <!-- Expander                       -->
    <!--                             -->
    <Style x:Key="Expander_Dark"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>

    <!--                             -->
    <!-- GroupBox                    -->
    <!--                             -->
    <Style x:Key="GroupBox_Dark"
           TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness"
                Value="0.1" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>


    <!--                             -->
    <!-- RadioButton                 -->
    <!--                             -->
    <Style x:Key="RadioButton_Dark"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>

    <!--                             -->
    <!-- CheckBox                    -->
    <!--                             -->
    <Style x:Key="CheckBox_Dark"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>

    <!--                             -->
    <!-- TextBox                     -->
    <!--                             -->
    <Style x:Key="TextBox_Dark"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>

    <!--                             -->
    <!--ComboBox                     -->
    <!--                             -->
    <Style x:Key="ComboBox_Dark"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"
                                                Grid.ColumnSpan="2"
                                                CornerRadius="3"
                                                Background="{DynamicResource BackgroundA}"
                                                BorderBrush="Black"
                                                BorderThickness="1" />
                                        <Border Grid.Column="0"
                                                Margin="1"
                                                CornerRadius="2"
                                                Background="{DynamicResource BackgroundB}"
                                                BorderBrush="{DynamicResource BackgroundA}"
                                                BorderThickness="1,1,1,1" />
                                        <Path x:Name="Arrow"
                                              Grid.Column="1"
                                              Fill="{DynamicResource ForegroundA}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{DynamicResource HighlightA}" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked"
                                                 Value="true">
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{DynamicResource BackgroundA}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center"
                                          Margin="5,0" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid  Name="DropDown"
                                   SnapsToDevicePixels="True"
                                   MinWidth="{TemplateBinding ActualWidth}"
                                   MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource BackgroundB}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--                             -->
    <!-- Dark Control                -->
    <!--                             -->
    <Style x:Key="Control_Dark"
           TargetType="{x:Type Control}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="Background"
                Value="Red" />
    </Style>

    <!--                             -->
    <!-- Window Dark                 -->
    <!--                             -->
    <Style x:Key="Window_Dark"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
    </Style>

    <!--                             -->
    <!-- GridSplitter                -->
    <!--                             -->
    <Style x:Key="GridSplitter_Dark"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Foreground"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <!--                             -->
    <!-- ToolBar                     -->
    <!--                             -->
    <Style x:Key="ToolBar_Dark"
           TargetType="{x:Type ToolBar}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundB}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundA}" />
    </Style>

    <!--                             -->
    <!-- ToolBarTray                 -->
    <!--                             -->
    <Style x:Key="ToolBarTray_Dark"
           TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundA}" />
        <Setter Property="IsLocked"
                Value="True" />
    </Style>

    <!-- SET THE GLOBAL STYLE-->

    <Style TargetType="{x:Type Window}"
           BasedOn="{StaticResource Window_Dark}" />
    <Style TargetType="{x:Type ScrollViewer}"
           BasedOn="{StaticResource ScrollViewer_Dark}" />
    <Style TargetType="{x:Type Menu}"
           BasedOn="{StaticResource MenuStyle_Dark}" />
    <Style TargetType="{x:Type ContextMenu}"
           BasedOn="{StaticResource ContextMenuStyle_Dark}" />
    <Style TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource MenuItemStyle_Dark}" />
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Dark}" />
    <Style TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource ToggleButton_Dark}" />
    <Style TargetType="{x:Type TabItem}"
           BasedOn="{StaticResource TabItem_Dark}" />
    <Style TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource TabControl_Dark}" />
    <Style TargetType="{x:Type Label}"
           BasedOn="{StaticResource Label_Dark}" />
    <Style TargetType="{x:Type GroupBox}"
           BasedOn="{StaticResource GroupBox_Dark}" />
    <Style TargetType="{x:Type Expander}"
           BasedOn="{StaticResource Expander_Dark}" />
    <Style TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource RadioButton_Dark}" />
    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource CheckBox_Dark}" />
    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBox_Dark}" />
    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource ComboBox_Dark}" />
    <Style TargetType="{x:Type GridSplitter}"
           BasedOn="{StaticResource GridSplitter_Dark}" />
    <Style TargetType="{x:Type ToolBar}"
           BasedOn="{StaticResource ToolBar_Dark}" />
    <Style TargetType="{x:Type ToolBarTray}"
           BasedOn="{StaticResource ToolBarTray_Dark}" />
</ResourceDictionary>